/**
 * Generated by apidoc - http://www.apidoc.me
 * Service version: 0.1.0-SNAPSHOT
 * apidoc:0.11.6 http://localhost:9000/movio/apidoc-generator-reference/0.1.0-SNAPSHOT/play_2_x_json_standalone
 */

package movio.apidoc.generator.reference.v0.models {

  package object json {
    import play.api.libs.json.__
    import play.api.libs.json.JsString
    import play.api.libs.json.Writes
    import play.api.libs.functional.syntax._
    import movio.apidoc.generator.reference.v0.models.json._

    private[v0] implicit val jsonReadsUUID = __.read[String].map(java.util.UUID.fromString)

    private[v0] implicit val jsonWritesUUID = new Writes[java.util.UUID] {
      def writes(x: java.util.UUID) = JsString(x.toString)
    }

    private[v0] implicit val jsonReadsJodaDateTime = __.read[String].map { str =>
      import org.joda.time.format.ISODateTimeFormat.dateTimeParser
      dateTimeParser.parseDateTime(str)
    }

    private[v0] implicit val jsonWritesJodaDateTime = new Writes[org.joda.time.DateTime] {
      def writes(x: org.joda.time.DateTime) = {
        import org.joda.time.format.ISODateTimeFormat.dateTime
        val str = dateTime.print(x)
        JsString(str)
      }
    }

    private[v0] implicit val jsonReadsJodaLocalDateTime = __.read[String].map { str =>
      import org.joda.time.format.ISODateTimeFormat.dateTimeParser
      dateTimeParser.parseLocalDateTime(str)
    }

    private[v0] implicit val jsonWritesJodaLocalDateTime = new Writes[org.joda.time.LocalDateTime] {
      def writes(x: org.joda.time.LocalDateTime) = {
        import org.joda.time.format.ISODateTimeFormat.dateTime
        val str = dateTime.print(x)
        JsString(str)
      }
    }

    implicit def jsonReadsApidocGeneratorReferenceAddress: play.api.libs.json.Reads[Address] = {
      (
        (__ \ "street").read[String] and
        (__ \ "tags").read[Seq[String]]
      )(Address.apply _)
    }

    implicit def jsonWritesApidocGeneratorReferenceAddress: play.api.libs.json.Writes[Address] = {
      (
        (__ \ "street").write[String] and
        (__ \ "tags").write[Seq[String]]
      )(unlift(Address.unapply _))
    }

    implicit def jsonReadsApidocGeneratorReferenceError: play.api.libs.json.Reads[Error] = {
      (
        (__ \ "status").read[String] and
        (__ \ "message").read[String]
      )(Error.apply _)
    }

    implicit def jsonWritesApidocGeneratorReferenceError: play.api.libs.json.Writes[Error] = {
      (
        (__ \ "status").write[String] and
        (__ \ "message").write[String]
      )(unlift(Error.unapply _))
    }

    implicit def jsonReadsApidocGeneratorReferenceHealthcheck: play.api.libs.json.Reads[Healthcheck] = {
      (__ \ "status").read[String].map { x => new Healthcheck(status = x) }
    }

    implicit def jsonWritesApidocGeneratorReferenceHealthcheck: play.api.libs.json.Writes[Healthcheck] = new play.api.libs.json.Writes[Healthcheck] {
      def writes(x: Healthcheck) = play.api.libs.json.Json.obj(
        "status" -> play.api.libs.json.Json.toJson(x.status)
      )
    }

    implicit def jsonReadsApidocGeneratorReferenceKafkaPerson: play.api.libs.json.Reads[KafkaPerson] = {
      (
        (__ \ "v0").read[movio.apidoc.generator.reference.v0.models.Person] and
        (__ \ "utc_generated_time").read[_root_.org.joda.time.LocalDate]
      )(KafkaPerson.apply _)
    }

    implicit def jsonWritesApidocGeneratorReferenceKafkaPerson: play.api.libs.json.Writes[KafkaPerson] = {
      (
        (__ \ "v0").write[movio.apidoc.generator.reference.v0.models.Person] and
        (__ \ "utc_generated_time").write[_root_.org.joda.time.LocalDate]
      )(unlift(KafkaPerson.unapply _))
    }

    implicit def jsonReadsApidocGeneratorReferencePerson: play.api.libs.json.Reads[Person] = {
      (
        (__ \ "id").read[String] and
        (__ \ "name").read[String] and
        (__ \ "dob").readNullable[_root_.org.joda.time.LocalDate] and
        (__ \ "addresses").read[Seq[movio.apidoc.generator.reference.v0.models.Address]]
      )(Person.apply _)
    }

    implicit def jsonWritesApidocGeneratorReferencePerson: play.api.libs.json.Writes[Person] = {
      (
        (__ \ "id").write[String] and
        (__ \ "name").write[String] and
        (__ \ "dob").writeNullable[_root_.org.joda.time.LocalDate] and
        (__ \ "addresses").write[Seq[movio.apidoc.generator.reference.v0.models.Address]]
      )(unlift(Person.unapply _))
    }
  }
}
